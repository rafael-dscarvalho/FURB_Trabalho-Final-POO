package view;

import java.text.NumberFormat;
import javax.swing.text.MaskFormatter;
import javax.swing.text.DefaultFormatterFactory;
import java.text.ParseException;
import java.time.LocalDate;
import java.time.Year;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.text.NumberFormatter;
import model.CategoriaReceita;
import model.ControleFinanceiro;
import model.Receita;

/**
 *
 * @author rafae
 */
public class TelaCadastroReceita extends javax.swing.JFrame {

    private ControleFinanceiro controle;
    private TelaPrincipal telaPrincipal;

    /**
     * Creates new form TelaCadastroReceita
     */
    public TelaCadastroReceita(ControleFinanceiro controle, TelaPrincipal telaPrincipal) {
        initComponents();
        setLocationRelativeTo(null);
        this.controle = controle;
        this.telaPrincipal = telaPrincipal;

        try {
            MaskFormatter mf = new MaskFormatter("##/##/####");
            mf.setPlaceholderCharacter('_');
            jFtxtDataReceita.setFormatterFactory(
                    new DefaultFormatterFactory(mf)
            );

            JFtxtValorReceita.setValue(0.00);

            NumberFormat format = NumberFormat.getNumberInstance(new Locale("pt", "BR"));
            format.setMinimumFractionDigits(2);
            format.setMaximumFractionDigits(2);
            format.setGroupingUsed(true); // ativa o uso de milhar (ponto)

            NumberFormatter formatter = new NumberFormatter(format);
            formatter.setValueClass(Double.class);
            formatter.setMinimum(0.0);
            formatter.setAllowsInvalid(false); // não deixa digitar letras ou coisas erradas
            formatter.setCommitsOnValidEdit(true); // aplica valor quando válido

            JFtxtValorReceita.setFormatterFactory(new DefaultFormatterFactory(formatter));

        } catch (ParseException ex) {
            ex.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JlblIncluirReceita = new javax.swing.JLabel();
        panelIncluirReceita = new javax.swing.JPanel();
        labelCategoriaReceita = new javax.swing.JLabel();
        JCbCategoriaReceita = new javax.swing.JComboBox<>();
        labelDataReceita = new javax.swing.JLabel();
        jFtxtDataReceita = new javax.swing.JFormattedTextField();
        labelValorReceita = new javax.swing.JLabel();
        JBtnConfirmarReceita = new javax.swing.JButton();
        jBtnReceitaVoltar = new javax.swing.JButton();
        JFtxtValorReceita = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        JlblIncluirReceita.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        JlblIncluirReceita.setText("Incluir Receita");

        panelIncluirReceita.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        labelCategoriaReceita.setText("Categoria");

        JCbCategoriaReceita.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Salario", "Decimo terceiro", "Ferias", "Outras receitas" }));
        JCbCategoriaReceita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JCbCategoriaReceitaActionPerformed(evt);
            }
        });

        labelDataReceita.setText("Data");

        jFtxtDataReceita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFtxtDataReceitaActionPerformed(evt);
            }
        });

        labelValorReceita.setText("Valor");

        JBtnConfirmarReceita.setText("Confirmar");
        JBtnConfirmarReceita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBtnConfirmarReceitaActionPerformed(evt);
            }
        });

        jBtnReceitaVoltar.setText("Voltar");
        jBtnReceitaVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnReceitaVoltarActionPerformed(evt);
            }
        });

        JFtxtValorReceita.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("¤#,##0.00"))));
        JFtxtValorReceita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JFtxtValorReceitaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelIncluirReceitaLayout = new javax.swing.GroupLayout(panelIncluirReceita);
        panelIncluirReceita.setLayout(panelIncluirReceitaLayout);
        panelIncluirReceitaLayout.setHorizontalGroup(
            panelIncluirReceitaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelIncluirReceitaLayout.createSequentialGroup()
                .addGroup(panelIncluirReceitaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelIncluirReceitaLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(JBtnConfirmarReceita, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtnReceitaVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelIncluirReceitaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panelIncluirReceitaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(JFtxtValorReceita, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelCategoriaReceita, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JCbCategoriaReceita, javax.swing.GroupLayout.Alignment.LEADING, 0, 136, Short.MAX_VALUE)
                            .addComponent(labelDataReceita, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelValorReceita, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jFtxtDataReceita, javax.swing.GroupLayout.Alignment.LEADING))))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        panelIncluirReceitaLayout.setVerticalGroup(
            panelIncluirReceitaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelIncluirReceitaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelCategoriaReceita)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JCbCategoriaReceita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelDataReceita)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jFtxtDataReceita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelValorReceita)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JFtxtValorReceita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panelIncluirReceitaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JBtnConfirmarReceita, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnReceitaVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(JlblIncluirReceita)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelIncluirReceita, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(JlblIncluirReceita)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelIncluirReceita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JCbCategoriaReceitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JCbCategoriaReceitaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JCbCategoriaReceitaActionPerformed

    private void jBtnReceitaVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnReceitaVoltarActionPerformed
        this.setVisible(false);
        telaPrincipal.setVisible(true);
        telaPrincipal.disporDados();
    }//GEN-LAST:event_jBtnReceitaVoltarActionPerformed

    private boolean dataValida(int dia, int mes, int ano) {
        if (mes < 1 || mes > 12) {
            return false;
        }
        if (dia < 1) {
            return false;
        }

        int[] diasNoMes = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
        int maxDia = diasNoMes[mes - 1];

        // fevereiro e ano bissexto
        if (mes == 2 && isAnoBissexto(ano)) {
            maxDia = 29;
        }

        if (dia > maxDia) {
            return false;
        }

        return true;
    }

    private boolean isAnoBissexto(int ano) {
        return (ano % 4 == 0 && ano % 100 != 0) || (ano % 400 == 0);
    }
    
    private void JBtnConfirmarReceitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBtnConfirmarReceitaActionPerformed
        try {
            // --- VALOR ---
            String valorStr = JFtxtValorReceita.getText().trim();
            if (valorStr.isEmpty() || valorStr.contains("_")) {
                JOptionPane.showMessageDialog(this, "Preencha o valor da receita corretamente.", "ERRO", JOptionPane.ERROR_MESSAGE);
                return;
            }

            NumberFormat nf = NumberFormat.getNumberInstance(new Locale("pt", "BR"));
            Number parsed = nf.parse(valorStr);
            double valor = parsed.doubleValue();

            if (valor <= 0) {
                JOptionPane.showMessageDialog(this, "Valor da receita deve ser maior que zero.", "RECEITA NÃO CADASTRADA", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // --- DATA ---
            String dataStr = jFtxtDataReceita.getText().trim();
            if (dataStr.isEmpty() || dataStr.contains("_")) {
                JOptionPane.showMessageDialog(this, "Preencha a data corretamente (dd/MM/yyyy).", "ERRO", JOptionPane.ERROR_MESSAGE);
                return;
            }

            String[] partes = dataStr.split("/");
            if (partes.length != 3) {
                JOptionPane.showMessageDialog(this, "Data inválida. Use o formato dd/MM/yyyy.", "ERRO", JOptionPane.ERROR_MESSAGE);
                return;
            }

            int dia, mes, ano;
            try {
                dia = Integer.parseInt(partes[0]);
                mes = Integer.parseInt(partes[1]);
                ano = Integer.parseInt(partes[2]);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Data contém valores não numéricos.", "ERRO", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Validação manual da data, incluindo ano bissexto
            if (!dataValida(dia, mes, ano)) {
                JOptionPane.showMessageDialog(this, "Data inválida ou impossível (verifique ano bissexto, mês e dia).", "ERRO", JOptionPane.ERROR_MESSAGE);
                return;
            }

            int anoAtual = Year.now().getValue();
            if (ano < 1970 || ano > anoAtual) {
                JOptionPane.showMessageDialog(this, "Ano da receita deve ser entre 1970 e " + anoAtual + ".", "ERRO", JOptionPane.ERROR_MESSAGE);
                return;
            }

            LocalDate data = LocalDate.of(ano, mes, dia);

            // --- CATEGORIA ---
            String selecionado = (String) JCbCategoriaReceita.getSelectedItem();
            if (selecionado == null) {
                JOptionPane.showMessageDialog(this, "Selecione uma categoria.", "ERRO", JOptionPane.ERROR_MESSAGE);
                return;
            }

            CategoriaReceita categoria = parseCategoria(selecionado);

            // --- SALVA ---
            Receita receita = new Receita(valor, data, categoria);
            controle.adicionarLancamento(receita);
            telaPrincipal.salvarSePossivel();
            
            JOptionPane.showMessageDialog(this, "Receita cadastrada com sucesso!");

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Erro ao cadastrar receita: " + ex.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_JBtnConfirmarReceitaActionPerformed

    private void jFtxtDataReceitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFtxtDataReceitaActionPerformed

    }//GEN-LAST:event_jFtxtDataReceitaActionPerformed

    private void JFtxtValorReceitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JFtxtValorReceitaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JFtxtValorReceitaActionPerformed

    private CategoriaReceita parseCategoria(String selecionado) {
        switch (selecionado) {
            case "Salario":
                return CategoriaReceita.SALARIO;
            case "Decimo terceiro":
                return CategoriaReceita.DECIMO_TERCEIRO;
            case "Ferias":
                return CategoriaReceita.FERIAS;
            case "Outras receitas":
                return CategoriaReceita.OUTRAS;
            default:
                throw new IllegalArgumentException("Categoria desconhecida: " + selecionado);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JBtnConfirmarReceita;
    private javax.swing.JComboBox<String> JCbCategoriaReceita;
    private javax.swing.JFormattedTextField JFtxtValorReceita;
    private javax.swing.JLabel JlblIncluirReceita;
    private javax.swing.JButton jBtnReceitaVoltar;
    private javax.swing.JFormattedTextField jFtxtDataReceita;
    private javax.swing.JLabel labelCategoriaReceita;
    private javax.swing.JLabel labelDataReceita;
    private javax.swing.JLabel labelValorReceita;
    private javax.swing.JPanel panelIncluirReceita;
    // End of variables declaration//GEN-END:variables
}
